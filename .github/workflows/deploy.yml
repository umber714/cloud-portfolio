name: Deploy Static Site to S3 + CloudFront

on:
  push:
    branches: [ "main" ]   # deploys when you push to main

permissions:
  id-token: write   # for OIDC
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  S3_BUCKET: ${{ vars.S3_BUCKET }}
  CLOUDFRONT_DISTRIBUTION_ID: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # Long-cache all static assets, but NOT html
      - name: Sync assets (cache forever-ish)
        run: |
          aws s3 sync . "s3://${S3_BUCKET}" \
            --delete \
            --exclude "*" \
            --include "*.css" \
            --include "*.js" \
            --include "*.png" \
            --include "*.jpg" \
            --include "*.jpeg" \
            --include "*.gif" \
            --include "*.svg" \
            --include "assets/*" \
            --cache-control "public,max-age=31536000,immutable"

      # Upload each HTML file with no-cache to avoid staleness
      - name: Upload HTML (no-cache)
        run: |
          find . -name "*.html" -type f -print0 | while IFS= read -r -d '' f; do
            key="${f#./}"
            aws s3 cp "$f" "s3://${S3_BUCKET}/${key}" \
              --cache-control "no-cache, no-store, must-revalidate"
          done

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${CLOUDFRONT_DISTRIBUTION_ID}" \
            --paths "/*"
